In [36]: df=pd.read_csv('ex1.csv')

In [37]: df
Out[37]:
   a   b   c   d message
0  1   2   3   4   hello
1  5   6   7   8   world
2  9  10  11  12     foo
In [40]: df=pd.read_csv('ex1.csv',names=['f','g','h','j','k'])#可自己指定列名，注意是names而不是name，也不是columns
In [41]: df
Out[41]:
   f   g   h   j        k
0  a   b   c   d  message
1  1   2   3   4    hello
2  5   6   7   8    world
3  9  10  11  12      foo
In [43]: pd.read_table('ex1.csv',sep=',')#可以用read_table，对sep进行参数传递，指定分隔符
Out[43]:
   a   b   c   d message
0  1   2   3   4   hello
1  5   6   7   8   world
2  9  10  11  12     foo
In [7]: b=pd.read_csv('ex1.csv',index_col='message')可以通过对index_col传入参数，来指定索引
In [8]: b
Out[8]:
         a   b   c   d
message
hello    1   2   3   4
world    5   6   7   8
foo      9  10  11  12
In [9]: c=pd.read_csv('csv_mindex.csv')
In [10]: c
Out[10]:
  key1 key2  value1  value2
0  one    a       1       2
1  one    b       3       4
2  one    c       5       6
3  one    d       7       8
4  two    a       1       2
5  two    b       3       4
6  two    c       5       6
7  two    d       7       8
In [11]: d=pd.read_csv('csv_mindex.csv',index_col=['key1','key2'])#通过index_col来实现分层索引
In [12]: d
Out[12]:
           value1  value2
key1 key2
one  a          1       2
     b          3       4
     c          5       6
     d          7       8
two  a          1       2
     b          3       4
     c          5       6
     d          7       8
In [3]: pd.read_csv("examples\ex4.csv")
Out[3]:
                                                                      # hey!
a                                                  b        c   d    message
# just wanted to make things more difficult for... NaN      NaN NaN      NaN
# who reads CSV files with computers                anyway? NaN NaN      NaN
1                                                  2        3   4      hello
5                                                  6        7   8      world
9                                                  10       11  12       foo
In [4]: pd.read_csv("examples\ex4.csv",skiprows=[0,2,3])#参数skiprows跳行读取数值
Out[4]:
   a   b   c   d message
0  1   2   3   4   hello
1  5   6   7   8   world
2  9  10  11  12     foo
In [5]: pd.read_csv("examples\ex5.csv")
Out[5]:
  something  a   b     c   d message
0       one  1   2   3.0   4     NaN
1       two  5   6   NaN   8   world
2     three  9  10  11.0  12     foo
In [9]: correct={'message':['world','foo'],'a':[5,9]}
In [10]: pd.read_csv("examples\ex5.csv",na_values=correct)#参数na_values来指定缺失值
Out[10]:
  something    a   b     c   d  message
0       one  1.0   2   3.0   4      NaN
1       two  NaN   6   NaN   8      NaN
2     three  NaN  10  11.0  12      NaN
